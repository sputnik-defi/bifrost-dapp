{"version":3,"sources":["assets/images/arrows.svg","assets/images/avax_logo.svg","assets/images/tzs_logo.svg","components/ExchangeForm.jsx","lib/avalanche.js","utils/avalanche.js","lib/tezos.js","utils/tezos.js","components/ConnectWallets.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["ExchangeForm","pairID","setPairID","exchangePairs","balances","connectWallets","clients","swapAvalanche","swapTezos","estimateAvalanche","estimateTezos","useState","fromAvalanche","setFromAvalanche","amount","setAmount","receivedAmount","setReceivedAmount","swapFee","setSwapFee","gasFee","setGasFee","useEffect","fee","toFixed","estimate","handlePairID","e","id","length","swap","a","gas","avalanche","tezos","Container","component","maxWidth","CssBaseline","Box","sx","width","margin","marginTop","py","px","display","flexDirection","backgroundColor","borderRadius","boxShadow","Typography","fontFamily","fontWeight","variant","Divider","my","light","noValidate","mt","Stack","direction","justifyContent","alignItems","ToggleButtonGroup","size","color","value","onChange","Object","keys","map","key","ToggleButton","name","align","opacity","ava","tzs","TextField","fullWidth","type","placeholder","autoFocus","onInput","target","InputProps","inputProps","step","min","style","textAlign","startAdornment","src","AvaxLogo","TzsLogo","IconButton","onClick","ArrowsIcon","disabled","Button","mb","p","Avalanche","web3","address","lockerAbi","contract","this","lockerContract","eth","Contract","getBalance","abi","methods","balanceOf","call","destination","lockAVAX","send","utils","toWei","lockUSDC","estimateGas","AVALANCHE_MAINNET_PARAMS","chainId","chainName","nativeCurrency","symbol","decimals","rpcUrls","blockExplorerUrls","AVALANCHE_TESTNET_PARAMS","setupAvaxClient","connectEthWallet","ethAccount","account","LockManager","config","network","networks","mainnet","lock_manager","testnet","window","ethereum","undefined","params","request","method","catch","error","console","log","Web3","enable","getAccounts","Tezos","wavaxAddress","wusdcAddress","tokenContract","wallet","at","views","read","balance","burn","toTransferParams","op","est","transfer","totalCost","setupTzsClient","TezosToolkit","TempleWallet","isAvailable","Error","connect","setWalletProvider","pkh","getPKH","wavax","wusdc","shortAccountString","first","last","str","substring","bigIntToFloat","number","precision","BigNumber","div","pow","ConnectWallets","setupAvax","setupTzs","setBalances","avaxAccount","setAvaxAccount","tzsAccount","setTzsAccount","setupAvaxAccount","err","setupTzsAccount","updateBalances","tokenBalance","disableGutters","Grid","container","spacing","item","xs","startIcon","NETWORK_CONFIG","EXCHANGE_PAIRS","usdc","usdcABI","MemoParticles","React","memo","options","particlesOptions","App","setClients","avax","clientsRef","useRef","current","setupTzsWallet","prevState","setupAvaxWallet","String","burnWAVAX","burnWUSDC","estimateLockAVAX","estimateLockUSDC","estimateBurnWAVAX","estimateBurnWUSDC","className","Date","getFullYear","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f9da9d7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/arrows.5dbfc9e6.svg\";","export default __webpack_public_path__ + \"static/media/avax_logo.a3f3731d.svg\";","export default __webpack_public_path__ + \"static/media/tzs_logo.fa5230cb.svg\";","import React, { useEffect, useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport {\n  Divider,\n  IconButton,\n  Stack,\n  ToggleButton,\n  ToggleButtonGroup,\n} from \"@mui/material\";\nimport ArrowsIcon from \"../assets/images/arrows.svg\";\nimport AvaxLogo from \"../assets/images/avax_logo.svg\";\nimport TzsLogo from \"../assets/images/tzs_logo.svg\";\n\nconst ExchangeForm = ({\n  pairID,\n  setPairID,\n  exchangePairs,\n  balances,\n  connectWallets,\n  clients,\n  swapAvalanche,\n  swapTezos,\n  estimateAvalanche,\n  estimateTezos,\n}) => {\n  const [fromAvalanche, setFromAvalanche] = useState(true);\n  const [amount, setAmount] = useState(0.0);\n  const [receivedAmount, setReceivedAmount] = useState(0.0);\n  const [swapFee, setSwapFee] = useState(0.0);\n  const [gasFee, setGasFee] = useState(0.0);\n\n  useEffect(() => {\n    let fee = ((amount / 100) * 0.3).toFixed(6);\n    setSwapFee(fee);\n  }, [amount]);\n\n  useEffect(() => {\n    estimate();\n  }, [pairID, fromAvalanche, amount]);\n\n  useEffect(() => {\n    let received = amount - swapFee - gasFee;\n    setReceivedAmount(received);\n  }, [swapFee, gasFee]);\n\n  const handlePairID = (e, id) => {\n    setPairID(id[id.length - 1]);\n  };\n\n  const handleAmountChange = (e) => {\n    setAmount(e.target.value);\n  };\n\n  const swap = async () => {\n    if (fromAvalanche) {\n      await swapAvalanche(amount);\n    } else {\n      await swapTezos(amount);\n    }\n  };\n\n  const estimate = async () => {\n    let gas = 0.0;\n\n    if (fromAvalanche && clients.avalanche) {\n      gas = await estimateAvalanche(amount);\n    } else if (clients.tezos) {\n      gas = await estimateTezos(amount);\n    }\n\n    setGasFee(gas.toFixed(6));\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"md\">\n      <CssBaseline />\n      <Box\n        sx={{\n          width: \"60%\",\n          margin: \"auto\",\n          marginTop: 6,\n          py: 3,\n          px: 5,\n          display: \"flex\",\n          flexDirection: \"column\",\n          backgroundColor: \"#ffffff\",\n          borderRadius: \"2%\",\n          boxShadow: \"0px 3px 7px 2px rgba(34, 60, 80, 0.2)\",\n        }}\n      >\n        <Typography\n          sx={{ fontFamily: \"Roboto\", fontWeight: \"100\" }}\n          component=\"h1\"\n          variant=\"h5\"\n        >\n          SWAP TOKENS\n        </Typography>\n        <Divider sx={{ my: 2 }} light />\n        <Box component=\"form\" noValidate sx={{ mt: 2 }}>\n          <Stack\n            direction=\"row\"\n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n          >\n            <ToggleButtonGroup\n              size=\"small\"\n              color=\"primary\"\n              value={pairID}\n              onChange={handlePairID}\n            >\n              {Object.keys(exchangePairs).map((key) => {\n                return (\n                  <ToggleButton key={key} value={key}>\n                    {fromAvalanche\n                      ? exchangePairs[key].avalanche.name\n                      : exchangePairs[key].tezos.name}\n                  </ToggleButton>\n                );\n              })}\n            </ToggleButtonGroup>\n            <Typography\n              align=\"right\"\n              sx={{ opacity: 0.7, fontFamily: \"Roboto\", fontWeight: \"300\" }}\n            >\n              Balance: {fromAvalanche ? balances.ava : balances.tzs}\n            </Typography>\n          </Stack>\n          <TextField\n            margin=\"normal\"\n            fullWidth\n            type=\"number\"\n            placeholder=\"0.00\"\n            autoFocus\n            onInput={handleAmountChange}\n            InputProps={{\n              inputProps: {\n                step: \"0.01\",\n                min: 0,\n                style: { textAlign: \"right\" },\n              },\n              startAdornment: fromAvalanche ? (\n                <img src={AvaxLogo} width={25} />\n              ) : (\n                <img src={TzsLogo} width={20} />\n              ),\n            }}\n          />\n          <IconButton\n            color=\"primary\"\n            onClick={() => {\n              setFromAvalanche(!fromAvalanche);\n            }}\n          >\n            <img src={ArrowsIcon} width={35} />\n          </IconButton>\n          <Stack\n            direction=\"row\"\n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n          >\n            <ToggleButtonGroup\n              size=\"small\"\n              color=\"primary\"\n              value={pairID}\n              onChange={handlePairID}\n            >\n              {Object.keys(exchangePairs).map((key) => {\n                return (\n                  <ToggleButton key={key} value={key}>\n                    {!fromAvalanche\n                      ? exchangePairs[key].avalanche.name\n                      : exchangePairs[key].tezos.name}\n                  </ToggleButton>\n                );\n              })}\n            </ToggleButtonGroup>\n            <Typography\n              align=\"right\"\n              sx={{ opacity: 0.7, fontFamily: \"Roboto\", fontWeight: \"300\" }}\n            >\n              Balance: {!fromAvalanche ? balances.ava : balances.tzs}\n            </Typography>\n          </Stack>\n          <TextField\n            margin=\"normal\"\n            fullWidth\n            type=\"number\"\n            placeholder=\"0.00\"\n            value={receivedAmount}\n            disabled={true}\n            InputProps={{\n              inputProps: {\n                style: { textAlign: \"right\" },\n                color: \"#000000\",\n              },\n              startAdornment: !fromAvalanche ? (\n                <img src={AvaxLogo} width={25} />\n              ) : (\n                <img src={TzsLogo} width={20} />\n              ),\n            }}\n          />\n          {connectWallets}\n          <Button\n            disabled={!(clients.avalanche && clients.tezos)}\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 1, mb: 2 }}\n            onClick={swap}\n          >\n            {!(clients.avalanche && clients.tezos) && \"connect wallets\"}\n            {clients.avalanche && clients.tezos && \"swap\"}\n          </Button>\n          <Box\n            sx={{\n              p: 2,\n              backgroundColor: \"rgba(204, 204, 204, 0.2)\",\n              borderRadius: \"7px\",\n            }}\n          >\n            <Stack\n              direction=\"row\"\n              justifyContent=\"space-between\"\n              alignItems=\"center\"\n            >\n              <Typography\n                sx={{ fontFamily: \"Roboto\", fontWeight: \"300\" }}\n                variant=\"subtitle1\"\n              >\n                Swap fee\n              </Typography>\n              <Typography\n                sx={{ fontFamily: \"Roboto\", fontWeight: \"300\" }}\n                variant=\"subtitle1\"\n              >\n                {swapFee}\n              </Typography>\n            </Stack>\n            <Stack\n              direction=\"row\"\n              justifyContent=\"space-between\"\n              alignItems=\"center\"\n            >\n              <Typography\n                sx={{ fontFamily: \"Roboto\", fontWeight: \"300\" }}\n                variant=\"subtitle1\"\n              >\n                Gas fee\n              </Typography>\n              <Typography\n                sx={{ fontFamily: \"Roboto\", fontWeight: \"300\" }}\n                variant=\"subtitle1\"\n              >\n                {gasFee}\n              </Typography>\n            </Stack>\n          </Box>\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n\nexport default ExchangeForm;\n","export class Avalanche {\n  constructor(web3, address, lockerAbi, contract) {\n    this.web3 = web3;\n    this.address = address;\n    this.lockerContract = null;\n\n    if (contract !== \"\") {\n      this.lockerContract = new this.web3.eth.Contract(lockerAbi, contract);\n    }\n  }\n\n  async balance() {\n    return await this.web3.eth.getBalance(this.address);\n  }\n\n  async tokenBalance(abi, address) {\n    let contract = new this.web3.eth.Contract(abi, address);\n    return await contract.methods.balanceOf(this.address).call();\n  }\n\n  async lockAVAX(amount, destination) {\n    return await this.lockerContract.methods.lockAVAX(destination).send({\n      value: this.web3.utils.toWei(amount),\n    });\n  }\n\n  async lockUSDC(amount, destination) {\n    return await this.lockerContract.methods\n      .lockUSDC(amount, destination)\n      .send();\n  }\n\n  async estimateLockAVAX(amount, destination) {\n    if (!this.lockerContract) {\n      return 0.0;\n    }\n\n    return await this.lockerContract.methods\n      .lockAVAX(destination)\n      .estimateGas({ value: this.web3.utils.toWei(amount) });\n  }\n\n  async estimateLockUSDC(amount, destination) {\n    if (!this.lockerContract) {\n      return 0.0;\n    }\n\n    return await this.lockerContract.methods\n      .lockUSDC(amount, destination)\n      .estimateGas();\n  }\n}\n","import Web3 from \"web3\";\nimport { Avalanche } from \"../lib/avalanche\";\nimport config from \"../config.json\";\nimport LockManager from \"../assets/abi/LockManager.json\";\n\nconst AVALANCHE_MAINNET_PARAMS = {\n  chainId: \"0xA86A\",\n  chainName: \"Avalanche Mainnet C-Chain\",\n  nativeCurrency: {\n    name: \"Avalanche\",\n    symbol: \"AVAX\",\n    decimals: 18,\n  },\n  rpcUrls: [\"https://api.avax.network/ext/bc/C/rpc\"],\n  blockExplorerUrls: [\"https://snowtrace.io/\"],\n};\n\nconst AVALANCHE_TESTNET_PARAMS = {\n  chainId: \"0xA869\",\n  chainName: \"Avalanche FUJI C-Chain\",\n  nativeCurrency: {\n    name: \"Avalanche\",\n    symbol: \"AVAX\",\n    decimals: 18,\n  },\n  rpcUrls: [\"https://api.avax-test.network/ext/bc/C/rpc\"],\n  blockExplorerUrls: [\"https://testnet.snowtrace.io/\"],\n};\n\nexport const setupAvaxClient = async () => {\n  const { web3, account: ethAccount } = await connectEthWallet();\n\n  return new Avalanche(\n    web3,\n    ethAccount,\n    LockManager,\n    config.network === \"mainnet\"\n      ? config.networks.mainnet.avalanche.lock_manager\n      : config.networks.testnet.avalanche.lock_manager\n  );\n};\n\nexport const connectEthWallet = async () => {\n  if (!window.ethereum) {\n    return undefined;\n  }\n\n  let params = [];\n  switch (config.network) {\n    case \"mainnet\":\n      params = [AVALANCHE_MAINNET_PARAMS];\n      break;\n    case \"testnet\":\n      params = [AVALANCHE_TESTNET_PARAMS];\n  }\n\n  window.ethereum\n    .request({\n      method: \"wallet_addEthereumChain\",\n      params: params,\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n\n  const web3 = new Web3(window.ethereum);\n\n  await window.ethereum.enable();\n  const account = await web3.eth.getAccounts();\n\n  return { web3, account: account[0] };\n};\n","export class Tezos {\n  constructor(tzs, address, wavaxAddress, wusdcAddress) {\n    this.tzs = tzs;\n    this.address = address;\n    this.wavaxAddress = wavaxAddress;\n    this.wusdcAddress = wusdcAddress;\n  }\n\n  async tokenBalance(tokenContract) {\n    const contract = await this.tzs.wallet.at(tokenContract);\n    const balance = await contract.views.getBalance(this.address).read();\n\n    return balance;\n  }\n\n  async burnWAVAX(amount, destination) {\n    const contract = await this.tzs.wallet.at(this.wavaxAddress);\n    await contract.methods.burn(amount, destination).send();\n  }\n\n  async burnWUSDC(amount, destination) {\n    const contract = await this.tzs.wallet.at(this.wusdcAddress);\n    await contract.methods.burn(amount, destination).send();\n  }\n\n  async estimateBurnWAVAX(amount, destination) {\n    const contract = await this.tzs.wallet.at(this.wavaxAddress);\n    const op = await contract.methods\n      .burn(amount, destination)\n      .toTransferParams({});\n\n    const est = this.tzs.estimate.transfer(op);\n\n    return est.totalCost;\n  }\n\n  async estimateBurnWUSDC(amount, destination) {\n    const contract = await this.tzs.wallet.at(this.wusdcAddress);\n    const op = await contract.methods\n      .burn(amount, destination)\n      .toTransferParams({});\n\n    const est = this.tzs.estimate.transfer(op);\n\n    return est.totalCost;\n  }\n}\n","import { TezosToolkit } from \"@taquito/taquito\";\nimport { TempleWallet } from \"@temple-wallet/dapp\";\nimport config from \"../config.json\";\nimport { Tezos } from \"../lib/tezos\";\n\nexport const setupTzsClient = async () => {\n  const tzs = new TezosToolkit(\"https://testnet-tezos.giganode.io\");\n\n  try {\n    const available = await TempleWallet.isAvailable();\n    if (!available) {\n      throw new Error(\"Temple Wallet not installed\");\n    }\n  } catch (err) {\n    console.log(err);\n  }\n\n  const wallet = new TempleWallet(\"AVAX Bridge\");\n\n  await wallet.connect(\n    config.network === \"mainnet\" ? \"mainnet\" : \"hangzhounet\"\n  );\n\n  tzs.setWalletProvider(wallet);\n\n  let address = wallet.pkh || (await wallet.getPKH());\n\n  let network =\n    config.network === \"mainnet\"\n      ? config.networks.mainnet\n      : config.networks.testnet;\n\n  return new Tezos(tzs, address, network.tezos.wavax, network.tezos.wusdc);\n};\n","import React, { useEffect, useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport { BigNumber } from \"bignumber.js\";\nimport { Container, Grid, Typography } from \"@mui/material\";\nimport AvaxLogo from \"../assets/images/avax_logo.svg\";\nimport TzsLogo from \"../assets/images/tzs_logo.svg\";\n\nconst ConnectWallets = ({\n  pairID,\n  exchangePairs,\n  setupAvax,\n  setupTzs,\n  setBalances,\n  clients,\n}) => {\n  const [avaxAccount, setAvaxAccount] = useState(\"\");\n  const [tzsAccount, setTzsAccount] = useState(\"\");\n\n  const setupAvaxAccount = async () => {\n    try {\n      setupAvax();\n    } catch (err) {}\n  };\n\n  const setupTzsAccount = async () => {\n    try {\n      setupTzs();\n    } catch (err) {}\n  };\n\n  const updateBalances = async () => {\n    let ava = 0.0;\n    let tzs = 0.0;\n\n    if (clients.avalanche) {\n      if (exchangePairs[pairID].avalanche.contract === \"\") {\n        ava = await clients.avalanche.balance();\n      } else {\n        ava = await clients.avalanche.tokenBalance(\n          exchangePairs[pairID].avalanche.abi,\n          exchangePairs[pairID].avalanche.contract\n        );\n      }\n    }\n\n    if (clients.tezos) {\n      tzs = await clients.tezos.tokenBalance(\n        exchangePairs[pairID].tezos.contract\n      );\n    }\n\n    setBalances({\n      ava: bigIntToFloat(ava, 18, 6),\n      tzs: bigIntToFloat(tzs, 18, 6),\n    });\n  };\n\n  useEffect(() => {\n    if (clients.avalanche) {\n      setAvaxAccount(clients.avalanche.address);\n    }\n    if (clients.tezos) {\n      setTzsAccount(clients.tezos.address);\n    }\n  }, [setupAvaxAccount, setupTzsAccount]);\n\n  useEffect(() => {\n    updateBalances();\n  }, [pairID, avaxAccount, tzsAccount]);\n\n  return (\n    <Container disableGutters sx={{ my: 1 }}>\n      <Grid container spacing={2}>\n        <Grid item xs={6}>\n          <Button\n            fullWidth\n            variant=\"outlined\"\n            startIcon={<img src={AvaxLogo} width={20} />}\n            onClick={!avaxAccount ? setupAvaxAccount : null}\n          >\n            {(!avaxAccount || avaxAccount.length == 0) && \"Connect\"}\n            {avaxAccount &&\n              avaxAccount.length > 0 &&\n              shortAccountString(5, 5, avaxAccount)}\n          </Button>\n        </Grid>\n        <Grid item xs={6}>\n          <Button\n            fullWidth\n            variant=\"outlined\"\n            startIcon={<img src={TzsLogo} width={15} />}\n            onClick={!tzsAccount ? setupTzsAccount : null}\n          >\n            {(!tzsAccount || tzsAccount.length == 0) && \"Connect\"}\n            {tzsAccount &&\n              tzsAccount.length > 0 &&\n              shortAccountString(5, 5, tzsAccount)}\n          </Button>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nconst shortAccountString = (first, last, str) => {\n  return str.substring(0, first) + \"...\" + str.substring(str.length - last);\n};\n\nconst bigIntToFloat = (number, decimals, precision) => {\n  return new BigNumber(number)\n    .div(new BigNumber(10).pow(decimals))\n    .toFixed(precision);\n};\n\nexport default ConnectWallets;\n","import \"./App.css\";\nimport React, { useState, useRef } from \"react\";\nimport Particles from \"react-tsparticles\";\nimport ExchangeForm from \"./components/ExchangeForm\";\nimport { setupAvaxClient } from \"./utils/avalanche\";\nimport { setupTzsClient } from \"./utils/tezos\";\nimport ConnectWallets from \"./components/ConnectWallets\";\nimport config from \"./config.json\";\nimport usdcABI from \"./assets/abi/avax_usdc.json\";\nimport particlesOptions from \"./particles.json\";\nimport { Typography } from \"@mui/material\";\nimport \"@fontsource/roboto/300.css\";\nimport \"@fontsource/roboto/400.css\";\nimport \"@fontsource/roboto/500.css\";\nimport \"@fontsource/roboto/700.css\";\n\nlet NETWORK_CONFIG =\n  config.network === \"mainnet\"\n    ? config.networks.mainnet\n    : config.networks.testnet;\n\nlet EXCHANGE_PAIRS = {\n  0: {\n    avalanche: {\n      name: \"AVAX\",\n      contract: \"\", // empty contract value means that token is native\n    },\n    tezos: {\n      name: \"WAVAX\",\n      contract: NETWORK_CONFIG.tezos.wavax,\n    },\n  },\n  1: {\n    avalanche: {\n      name: \"USDC\",\n      contract: NETWORK_CONFIG.avalanche.usdc,\n      abi: usdcABI,\n    },\n    tezos: {\n      name: \"WUSDC\",\n      contract: NETWORK_CONFIG.tezos.wusdc,\n    },\n  },\n};\n\nconst App = () => {\n  const [clients, setClients] = useState({\n    avalanche: null,\n    tezos: null,\n  });\n  const [balances, setBalances] = useState({\n    avax: 0.0,\n    tzs: 0.0,\n  });\n  const [pairID, setPairID] = useState(\"0\");\n\n  const clientsRef = useRef();\n  clientsRef.current = clients;\n\n  const setupTzsWallet = async () => {\n    try {\n      const tezos = await setupTzsClient();\n      setClients((prevState) => ({ ...prevState, tezos }));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const setupAvaxWallet = async () => {\n    try {\n      const avalanche = await setupAvaxClient();\n      setClients((prevState) => ({ ...prevState, avalanche }));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const swapAvalanche = async (amount) => {\n    let destination = String(clients.tezos.address);\n\n    try {\n      switch (pairID) {\n        case \"0\":\n          await clients.avalanche.lockAVAX(amount, destination);\n        case \"1\":\n          await clients.avalanche.lockUSDC(amount, destination);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const swapTezos = async (amount) => {\n    let destination = String(clients.avalanche.address);\n\n    try {\n      switch (pairID) {\n        case \"0\":\n          await clients.tezos.burnWAVAX(amount, destination);\n        case \"1\":\n          await clients.tezos.burnWUSDC(amount, destination);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const estimateAvalanche = async (amount) => {\n    let destination = String(clients.tezos.address);\n\n    try {\n      switch (pairID) {\n        case \"0\":\n          return await clients.avalanche.estimateLockAVAX(amount, destination);\n        case \"1\":\n          return await clients.avalanche.estimateLockUSDC(amount, destination);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const estimateTezos = async (amount) => {\n    let destination = String(clients.avalanche.address);\n\n    try {\n      switch (pairID) {\n        case \"0\":\n          return await clients.tezos.estimateBurnWAVAX(amount, destination);\n        case \"1\":\n          return await clients.tezos.estimateBurnWUSDC(amount, destination);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div>\n      <MemoParticles />\n      <div className=\"App\">\n        <ExchangeForm\n          pairID={pairID}\n          setPairID={setPairID}\n          exchangePairs={EXCHANGE_PAIRS}\n          balances={balances}\n          clients={clientsRef.current}\n          swapAvalanche={swapAvalanche}\n          swapTezos={swapTezos}\n          estimateAvalanche={estimateAvalanche}\n          estimateTezos={estimateTezos}\n          connectWallets={\n            <ConnectWallets\n              pairID={pairID}\n              exchangePairs={EXCHANGE_PAIRS}\n              clients={clientsRef.current}\n              setupAvax={setupAvaxWallet}\n              setupTzs={setupTzsWallet}\n              setBalances={setBalances}\n            />\n          }\n        ></ExchangeForm>\n        <Typography sx={{ opacity: 0.6, mt: 2 }}>\n          &#169; {new Date().getFullYear()} Sputnik\n        </Typography>\n      </div>\n    </div>\n  );\n};\n\nconst MemoParticles = React.memo(() => (\n  <Particles id=\"tsparticles\" options={particlesOptions} />\n));\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}